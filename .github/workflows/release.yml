name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Run Semantic Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --no-ci --branches main

  build:
    name: Publishing for ${{ matrix.os }}
    needs: create-release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            artifact_prefix: linux
            target: x86_64-unknown-linux-gnu
            binary_postfix: ""
          - os: windows-latest
            artifact_prefix: windows
            target: x86_64-pc-windows-msvc
            binary_postfix: ".exe"

    steps:
      - name: Installing Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Checking out sources
        uses: actions/checkout@v1
      - name: Buiding cli package
        run: cargo build -p videospidercli --release --target ${{ matrix.target }}
      - name: Buiding tui package
        run: cargo build -p videospidertui --release --target ${{ matrix.target }}
      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          # videospidercli
          BINARY_NAME=videospidercli${{ matrix.binary_postfix }}
          RELEASE_NAME=videospidercli-${{ matrix.artifact_prefix }}
          strip $BINARY_NAME
          tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
          fi
          # videospidertui
          BINARY_NAME=videospidertui${{ matrix.binary_postfix }}
          RELEASE_NAME=videospidertui-${{ matrix.artifact_prefix }}
          strip $BINARY_NAME
          tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
          fi
      - name: Release assets
        uses: svenstaro/upload-release-action@v2
        with:
          release_id: ${{ needs.create-release.outputs.release_id }}
          file: |
            target/${{ matrix.target }}/release/videospidercli-${{ matrix.artifact_prefix }}.tar.gz
            target/${{ matrix.target }}/release/videospidercli-${{ matrix.artifact_prefix }}.sha256
            target/${{ matrix.target }}/release/videospidertui-${{ matrix.artifact_prefix }}.tar.gz
            target/${{ matrix.target }}/release/videospidertui-${{ matrix.artifact_prefix }}.sha256
            LICENSE
          tab: ${{ github.rf_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
